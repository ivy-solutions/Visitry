version: 2
jobs:
  build:
    working_directory: ~/build
    docker:
      - image: circleci/node:8.9.1-browsers
    steps:
      #Checkout the code to working directory
      - checkout
      #Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Install meteor
      - run:
          name: Install meteor
          command: |
            meteor || curl https://install.meteor.com | /bin/sh
      # https://github.com/meteor/meteor/issues/4019  - avoid mongodb error
      - run:
          name: Set up mongodb locale
          command: |
            sudo apt-get update
            DEBIAN_FRONTEND=noninteractive sudo apt-get install -y locales
            sudo sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
            sudo dpkg-reconfigure --frontend=noninteractive locales
            sudo update-locale LANG=en_US.UTF-8
            export LANG=en_US.UTF-8
      # Restore local dependencies from cache
      - restore_cache:
           keys:
             - v1-dependencies-{{ checksum "package.json" }}
             - v1-dependencies-#install npm
             - build-meteor-system-{{ checksum "./.circleci/config.yml" }}
      - run:
          name: install npm packages
          command: |
             meteor npm install
             meteor npm install --save bcrypt
             npm install spacejam
      # Cache local dependencies if they don't exist
      - save_cache:
           name: Saving Cache - meteor build
           key: build-meteor-system-{{ checksum "./.circleci/config.yml" }}
           paths:
             - ~/.meteor
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      #tests
      - run:
          name: Unit tests
          command: npm test
      - store_test_results:
          path: ~/build/test-results.xml
  deploy:
    working_directory: ~/.deploy
    docker:
      - image: circleci/node:8.9.1-browsers
    steps:
      #Checkout the code to working directory
      - checkout
      #Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Install mup
      - run:
          name: Install mup
          command: npm install mup
            # Install AWS cli
      - run:
          name: Install aws cli
          command: sudo apt-get -y -qq install awscli
      # Build project with different configuration based on
      - run:
          name: Deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "dev" ]; then
                aws s3 cp s3://visitry-build-info/site-ssl-certs/dev/bundle.crt ~/dev/bundle.crt
                aws s3 cp s3://visitry-build-info/site-ssl-certs/dev/private.key ~/dev/private.key
                cd dev && mup deploy
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
                echo "Not yet configured"
            else
                echo "Not yet"
            fi
workflows:
    version: 2
    # The build and deploy workflow
    build_and_deploy_dev:
        jobs:
            - build
            # The deploy job will only run on the filtered branches and
            # require the build job to be successful before it starts
            - deploy:
                requires:
                    - build
                filters:
                    branches:
                        only:
                            - dev
